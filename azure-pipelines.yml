# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    
#- task: SynopsysDetectTask@2
#  inputs:
#    Products: 'ALL'
#    BlackDuckService: '188-blackduck'
#    PolarisService: 'csprod-polaris'
#    DetectVersion: 'latest'
#    DetectArguments: '--detect.project.name=cognitive-services-quickstart-code --detect.project.version.name=develop -de --polaris.command=analyze --coverity-ignore-capture-failure'

- task: SynopsysPolaris@1
  displayName: Running Synopsys Polaris
  inputs:
    polarisService: 'sipse-polaris-server'
    polarisCommand: 'analyze --coverity-ignore-capture-failure"'

# Command line
# Run a command line script using Bash on Linux and macOS and cmd.exe on Windows
- task: CmdLine@2
  displayName: Displaying build-log.txt
  inputs:
    script: 'type build-log.txt'
    workingDirectory: 'D:/a/1/s/.synopsys/polaris/data/coverity/2020.06/idir/'
    #failOnStderr: false # Optional